name: Publish

on:
  # Trigger the workflow on the new 'v*' tag created
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always


jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    # Note this. We are going to use that in further jobs.
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          
  build_and_publish:
    name: Build and publish binaries for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: create_release # need upload_url
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
        - os: ubuntu-latest
          file: target/release/ddg-proxy
          args: --best --lzma
          strip: true
#         - os: windows-latest
#           file: target/release/ddg-proxy.exe
#           args: -9
#           strip: false
        - os: macos-latest
          file: target/release/ddg-proxy
          args: --best
          strip: true
        rust: [nightly]
    steps:
    - uses: actions/checkout@master
    - name: Cache cargo
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ matrix.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Setup rust toolchain
      uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
        
    - name: Build
      run: cargo build --release    
      
    - name: Compress binaries
      uses: svenstaro/upx-action@v2
      with:
        file: ${{ matrix.file }}
        args: ${{ matrix.args }}
        strip: ${{ matrix.strip }}
        
    - name: Archive
      run: |
        mv target/release/ddg-proxy .
        tar caf ddg-proxy-${{matrix.os}}.tar.gz templates ddg-proxy
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_name: ddg-proxy-${{ matrix.config.os }}.tar.gz
        asset_path: ddg-proxy-${{ matrix.config.os }}.tar.gz
        asset_content_type: application/octet-stream
