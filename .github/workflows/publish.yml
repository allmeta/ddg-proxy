name: Publish

on:
  push:
    branches: main

env:
  CARGO_TERM_COLOR: always


jobs:
  create_release:
    if: startsWith($(git tag --points-at HEAD), "v")
    name: Create release
    runs-on: ubuntu-20.04
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          
  build_and_publish:
    name: Build and publish binaries for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: create_release
    strategy:
      matrix:
        os: [windows-2022, ubuntu-20.04, macos-11]
        include:
        - os: ubuntu-20.04
          file: ddg-proxy
          args: --best --lzma
          strip: true
        - os: windows-2022
          file: ddg-proxy.exe
          args: -9
          strip: false
        - os: macos-11
          file: ddg-proxy
          args: --best
          strip: true
        rust: [nightly]
        binary_path: [target/release]
    steps:
    - uses: actions/checkout@master
    
    - name: Setup rust toolchain
      uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    
    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ matrix.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ matrix.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          ${{ matrix.os }}-cargo-
          ${{ matrix.os }}-
          
    - name: Build
      run: cargo build --release
      
    - name: Compress binaries
      uses: svenstaro/upx-action@v2
      with:
        file: ${{ matrix.binary_path }}/${{ matrix.file }}
        args: ${{ matrix.args }}
        strip: ${{ matrix.strip }}
        
    - name: Archive
      run: |
        mv ${{ matrix.binary_path }}/${{ matrix.file }} .
        tar caf ddg-proxy-${{matrix.os}}.tar.gz templates bangs ${{ matrix.file }}
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_name: ddg-proxy-${{ matrix.os }}.tar.gz
        asset_path: ddg-proxy-${{ matrix.os }}.tar.gz
        asset_content_type: application/octet-stream
